<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: セミナー | Etizolam]]></title>
  <link href="http://jhotta.github.io/blog/categories/semina/atom.xml" rel="self"/>
  <link href="http://jhotta.github.io/"/>
  <updated>2014-04-15T00:28:25+09:00</updated>
  <id>http://jhotta.github.io/</id>
  <author>
    <name><![CDATA[@jhotta]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Trema Day #4 参加しました。]]></title>
    <link href="http://jhotta.github.io/blog/2013/11/18/trema-day-4/"/>
    <updated>2013-11-18T13:46:00+09:00</updated>
    <id>http://jhotta.github.io/blog/2013/11/18/trema-day-4</id>
    <content type="html"><![CDATA[<h2>基本情報:</h2>

<ul>
<li><a href="http://atnd.org/event/E0020713">Trema Day #4</a></li>
</ul>


<h3>関連情報:</h3>

<ul>
<li><a href="http://osrg.github.io/ryu/">Ryu</a></li>
<li><a href="http://www.projectfloodlight.org/floodlight/">fooldlight</a></li>
<li><a href="http://trema.github.io/trema/">trema</a></li>
<li><a href="http://www.slideshare.net/stereocat55/tremafirewall">Tremaで試すfirewall</a></li>
</ul>


<h2>感想:</h2>

<p>2013年のDevOps Day Londonで、John WillisがSDNのプレゼンをしていた。彼の話しによれば、現在のSDNを取巻く環境は、彼が2005年くらいにPuppet Labs, Opscodeで顧客としていた"仮想化, クラウド, 自動化"に関する会話と酷似ていると言っていた。もしも、10年サイクルでICTに新しいトレンドが来るとすると、SDNのトレンドは既に始まっており、丁度仮想化業界にPuppetが登場する前当たりではないかともコメントしていた。</p>

<p>個人的には、計算能力とネットワーク転送力の比較をしてみると、転送力は明らかにスッペック不足のように感じる上、ネットワークエンジニア１人が管理しているネットワーク機器の数(1:120)は、オペレーションエンジニアが管理している計算ノードよりも圧倒的に少ない（FBでは、5名のシスアドミンで全体を管理）。 ”Infrastructure as Code”という概念には、当然ネットワークも自動化の対象として組み込まれないと完成しないと思う。</p>

<p>ネットワークの知識が中途半端打であったため、SDNの勉強会に参加してプレゼンで話されている単語を拾うのが精一杯であったのだが、今後も引き続き勉強していこうと思わせる分野には間違いと感じることができた。</p>

<h4>今後の行動指針:</h4>

<ul>
<li>NTTの研究所で開発されているRyuというコントローラーは、Pythonで書かれているらしくこの辺から勉強を始めたら理解出来るかな〜。</li>
<li>Goで書かれている、FOSS系のOpenFlowのコントローラーがないか探してみたのですが、みあたらなかった見当たらなかった。日本の発のものはRubyとかPythonで書かれているけど、FOSSとしての配布のことを考えるとGoのほうが便利だから、なにか出来ないか〜。</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Lean UX 入門セミナーへ参加しました。]]></title>
    <link href="http://jhotta.github.io/blog/2013/11/13/lean-ux-seminar/"/>
    <updated>2013-11-13T19:00:00+09:00</updated>
    <id>http://jhotta.github.io/blog/2013/11/13/lean-ux-seminar</id>
    <content type="html"><![CDATA[<h3>基本情報:</h3>

<ul>
<li><a href="http://connpass.com/event/3964/">Lean UX 入門セミナー</a></li>
</ul>


<h3>関連情報:</h3>

<ul>
<li><a href="http://www.amazon.co.jp/dp/B0074KA0A4">Lean UX: Applying Lean Principles to Improve User Experience</a></li>
<li><a href="http://www.amazon.co.jp/dp/B00F3UTIQY">リーン・スタートアップ</a></li>
<li><a href="http://www.amazon.co.jp/dp/4873115914">Running Lean</a></li>
<li><a href="http://www.amazon.co.jp/dp/4798117552">アントレプレナーの教科書</a></li>
<li><a href="http://www.amazon.co.jp/dp/4798122971">ビジネスモデル・ジェネレーション ビジネスモデル設計書</a></li>
<li><a href="http://www.jeffgothelf.com/blog/">Jeff Gothelf Blog</a></li>
</ul>


<h2>感想:</h2>

<ul>
<li>Leanが課題解決型の手法であるために、Lean UXも課題解決型のインクリメンタルな開発に向いていると感じた。この逆に、いずれゲームチェンジャーと認められるようなUXの革命を目指すなら、別の手法の選択もありと感じた。</li>
<li>Leanの手法はイテレーションを前提としているため、外注を巻き込んでのプロジェクトの場合は、その初期の役割再確認や利害関係の再設計を念頭に置いた”場（こたつ）”づくりが、日本では特に重要と感じた。</li>
</ul>

]]></content>
  </entry>
  
</feed>
