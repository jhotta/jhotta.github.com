<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: DevOps | Etizolam]]></title>
  <link href="http://jhotta.github.io/blog/categories/devops/atom.xml" rel="self"/>
  <link href="http://jhotta.github.io/"/>
  <updated>2014-05-13T16:25:31+09:00</updated>
  <id>http://jhotta.github.io/</id>
  <author>
    <name><![CDATA[@jhotta]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Datadogに任意のメトリックスを送信する (その1)]]></title>
    <link href="http://jhotta.github.io/blog/2014/04/24/datadog-sending-custom-metrics-1/"/>
    <updated>2014-04-24T16:53:00+09:00</updated>
    <id>http://jhotta.github.io/blog/2014/04/24/datadog-sending-custom-metrics-1</id>
    <content type="html"><![CDATA[<p>Datadogに任意のメトリックスを継続的に送信するには、DogStatsDを介してDatadogのサイトに送信するのが最も簡単な方法です。</p>

<p><a href="http://docs.datadoghq.com/guides/dogstatsd/">DogStatsD</a>は、NYC発祥の物販サイト<a href="https://www.etsy.com/">Etsy</a>がFOSS化している<a href="https://github.com/etsy/statsd/">StatsD</a>のプロトコルを実装したメトリクス集積サーバ(a metrics aggregation server)です。DogStatsDは、DD-agentに同胞されているので、既にDD-agentが動作していればすぐに使うことができます。(但し、Intel Galileoのようにデーモンを手動で起動するケースは、dogstatsdを起動している必要があります。)</p>

<p><em>StatsD及びStatsDプロトコルは、DevOpsを実践している欧米企業で各種のメトリックスを収集するために広く使われているソフトウェアとプロトコルです。</em></p>

<p><img class="center" src="/images/blog-images/dogstatsd.png" width="800" height="800" title="&lsquo;DogStatsD&rsquo; &lsquo;DogStatsD&rsquo;" ></p>

<p>DogStatsDは、アプリケーションからUDPで受け取ったメトリックスを一旦ホスト内で蓄積します。その後一定時間ことに、DatadogのサイトにHTTPSで送信します。Datagogのサイトでは、DogStatsDから受けとったメトリックスも名前スペースとタグ付によって管理され、他のメトリックスと同様にグラフ化することができるようになっています。</p>

<p>DogStatsDとの通信がなぜUDPかというという事に関しては、「この間の通信の障害や遅延によってアプリケーションの動作をストールさせないため」と書いてありました。</p>

<h3>DogStatsDのラッパーライブラリーについて</h3>

<p>DogStatsDへのメトリックス送信手続きを簡素化するために、一般的な言語向けにラッパーライブラリーが提供されています。これらのラッパーライブラリーを活用すると数行のコード追加で任意メトリックスをDogStatsDに転送することができます。</p>

<p>以下に代表的なライブラリーを紹介しておきます。</p>

<h4>Datadogによって提供されているライブラリー</h4>

<p><strong>Python: </strong>
<a href="https://github.com/DataDog/dogstatsd-python">dogstatsd-python</a> &ndash; Python DogStatsD client.</p>

<p><strong>Ruby: </strong>
<a href="https://github.com/DataDog/dogstatsd-ruby">dogstatsd-ruby</a> &ndash; Ruby DogStatsD client.</p>

<p><strong>PHP: </strong>
<a href="https://github.com/DataDog/php-datadogstatsd">php-datadogstatsd</a> &ndash; PHP DogStatsD client.</p>

<p><strong>C#: </strong>
<a href="https://github.com/DataDog/dogstatsd-csharp-client">dogstatsd-csharp-client</a> &ndash; C# DogStatsD client.</p>

<h4>コミュニティーによって提供されいるライブラリー</h4>

<p><strong>Java: </strong>
<a href="https://github.com/indeedeng/java-dogstatsd-client">java-dogstatsd-client</a> &ndash; DogStatsD Client for Java, <a href="https://github.com/indeedeng">Indeed</a>提供.</p>

<p><strong>Node.js: </strong>
<a href="https://github.com/joybro/node-dogstatsd">node-dogstatsd</a> &ndash; Node.js DogStatsD client, <a href="https://github.com/joybro">Young Han Lee</a>提供.</p>

<p><strong>Perl: </strong>
<a href="https://github.com/zipkid/dogstatsd-perl">dogstatsd-perl</a> &ndash; Perl DogStatsD client, <a href="https://github.com/zipkid">Stefan Goethals</a>提供.</p>

<p><strong>Ruby: </strong>
<a href="https://github.com/mavenlink/metriks-dogstatsd">metricks-dogstatsd</a> &ndash; backend for the popular Metriks gem, <a href="https://github.com/mavenlink">Mavenlink</a>提供.</p>

<p><strong>Go: </strong>
<a href="https://github.com/ooyala/go-dogstatsd/">go-dogstatsd</a> &ndash; dogstatsd client written in Go, <a href="https://github.com/ooyala">Ooyala</a>提供.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Datadog Integrationsを追加する]]></title>
    <link href="http://jhotta.github.io/blog/2014/04/14/datadog-integrations/"/>
    <updated>2014-04-14T16:44:00+09:00</updated>
    <id>http://jhotta.github.io/blog/2014/04/14/datadog-integrations</id>
    <content type="html"><![CDATA[<p>DD−agentが収集している基本的なメトリックスのグラフを見ているだけでも多くのことが分るようになりますが、それ以外にもDatadog社が事前に準備してくれているメトリックス収集プラグインが存在しています。これらのプラグインをDatadogでは、Integrationsと読んでいるようです。</p>

<p>Datadogにloginし、ダッシュボードから<code>Integrations</code> タブにカーソルを移動し、ドロップダウンから<code>Integrations</code>を選択すると次のページに移動することができます。</p>

<p><img class="center" src="/images/blog-images/datadog-integrations.png" width="800" height="800" title="&lsquo;datadog integrations&rsquo; &lsquo;datadog integrations&rsquo;" ></p>

<p>各Instarationのタイルにカーソルを合わせると、その解説が表示され、<code>Avalable</code>ボタンが、<code>Install</code>に変わります。<code>Install</code>をダブルクリックする、次のようなインストール確認の画面が表示されます。</p>

<p><img class="center" src="/images/blog-images/datadog-integrations-add.png" width="800" height="800" title="&lsquo;datadog integrations&rsquo; &lsquo;datadog integrations&rsquo;" ></p>

<p>Configurationタブを選択して、設定項目を入力し<code>Install Integration</code>をクリックします。</p>

<p>Integrationの種類によっては、サーバー側の設定が必要なものもあります。その情報は、Configurationページで詳細に記載されています。その手順に従って設定作業を完了しておいてください。</p>

<p>Datadog側でIntagrationのインストールが完了すると、ページ上段のInstalled項目にタイルが表示されます。後に設定の変更などが発生した場合は、緑の<code>Installed</code>ボタンをクリックし、再度<code>Configuration</code>タブ選択し再設定することで、新しい設定を反映させるとことができます。</p>

<p><img class="center" src="/images/blog-images/datadog-integrations-installed.png" width="800" height="800" title="&lsquo;datadog integrations&rsquo; &lsquo;datadog integrations&rsquo;" ></p>

<p>Configurationが正しくできてメトリックスがDatadog側で受信できていれば、しばらくすると<code>Infrastracture</code>ページにメトリックスを表示するための青いラベルが追加されます。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Datadogでサービスモニターリング [agentのインストール]]]></title>
    <link href="http://jhotta.github.io/blog/2014/04/08/install-datadog-agent/"/>
    <updated>2014-04-08T19:11:00+09:00</updated>
    <id>http://jhotta.github.io/blog/2014/04/08/install-datadog-agent</id>
    <content type="html"><![CDATA[<p>世界では着実に知名度を上げてきているDatadogのモニターリング・サービスなのだが、日本語の情報がまだまだ少ないせいか、国内での盛り上がりに欠ける気がしてならない。
しかしながら、僕が2013 Pycon APACの時に使った写真主体のDatadogスライドには、定期的に閲覧が発生している。</p>

<p>数年に渡ってDatadogを見てきた僕としては、Datadogをもっと理解してもらうためには日本語の入門ポストを書くしかなと感じた。更に、いつも僕の要望に応えてくれるDatadog CTOのAlexisへの恩返しのためにもなるしね。</p>

<p>更に僕のような3流プログラマーには、収集したいメトリックスをプログラマー自身がコード内で設定できる仕組みは、New Relicの決め打メトリックス収集と違って、かゆいところに手が届く仕様になっていると思うので、この醍醐味を少しでも多くのプログラマーに知ってもらいたいというのも動機を後押ししている。</p>

<p>尚、今回Datadog agentをインストールするOSは、僕が使い慣れているUbuntuにする。基本的なサーバーメトリックスをDatadogに送信ができるようになったら、Datadogが提供しているPythonラッパーを使って、プログラム内から自分たち独自のデータをDatadogに送信しモニターリングたり、APIを使ってタイムラインにメッセージを表示したりするなど、初歩的で特徴的な使い方を紹介したいと思っている。</p>

<h2>UbuntuにDatadog agentをインストール</h2>

<p>Windows, OSX, linuxなどの一般的なOSを利用していれば、agentのインストールは非常に簡単です。</p>

<p>まず最初にDatadogのアカウントを取得します。右上隅の<code>FREE TRIAL</code>ボタンをクリックし、登録情報の入力画面に遷移します。</p>

<p><img class="center" src="/images/blog-images/datadog-top.png" width="800" height="800" title="&lsquo;datadog top page&rsquo; &lsquo;datadog top page&rsquo;" ></p>

<p>一通り情報を入力し、<code>Sing up</code>ボタンをクリックし登録を完了します。</p>

<p><img class="center" src="/images/blog-images/datadog-register.png" width="800" height="800" title="&lsquo;datadog register page&rsquo; &lsquo;datadog register page&rsquo;" ></p>

<p>登録が完了すると次のようなDatadogのダッシュボードが表示されます。このダッシュボードで、<code>Integrations</code>タブにカーソルを移動し<code>Agent</code>と項目を選択すると次のページが表示されます。</p>

<p><img class="center" src="/images/blog-images/datadog-os-select.png" width="800" height="800" title="&lsquo;datadog agent os select&rsquo; &lsquo;datadog agent os select&rsquo;" ></p>

<p>僕は、ubuntuを使っているので、ページ内でubuntuを選択すると、ubuntu向けのDatadog agentをインストールするためのコマンドが表示されます。</p>

<p><img class="center" src="/images/blog-images/ubuntu-agent-install.png" width="800" height="800" title="&lsquo;datadog agent install&rsquo; &lsquo;datadog agent install&rsquo;" ></p>

<p>インストール手順のページから上記の赤く囲った部分をコピーし、 サーバのコンソールよりroot権限で実行します。</p>

<p><code>
sudo DD_API_KEY={アカウントに紐づいたkey code} bash -c "$(curl -L http://dtdg.co/agent-install-ubuntu)"
</code></p>

<p>インストール作業が順調に作業が進んで、Datadogへデータを送信できたことが確認が取れると次のメッセージがコンソールに表示されます。</p>

<p>```
Waiting for metrics&hellip;&hellip;&hellip;&hellip;&hellip;&hellip;&hellip;&hellip;&hellip;&hellip;&hellip;</p>

<p>Your Agent is running and functioning properly. It will continue to run in the
background and submit metrics to Datadog.</p>

<p>If you ever want to stop the Agent, run:</p>

<pre><code>sudo /etc/init.d/datadog-agent stop
</code></pre>

<p>And to run it again run:</p>

<pre><code>sudo /etc/init.d/datadog-agent start
</code></pre>

<p>```</p>

<p>コンソールにメッセージが表示されたところで、<code>Infrastructure</code>タブへ移動し、新しく追加したサーバが表示されていることを確認します。</p>

<p><img class="center" src="/images/blog-images/datadog-infrastructure.png" width="800" height="800" title="&lsquo;datadog infrastructure page&rsquo; &lsquo;datadog infrastructure page&rsquo;" ></p>

<p>サーバの名前をクリックすると、そのサーバに関してDatadog agentが集めている基本メトリックスを表示しているページに遷移することができます。</p>

<p><img class="center" src="/images/blog-images/datadog-base-dash.png" width="800" height="800" title="&lsquo;datadog target infra page&rsquo; &lsquo;datadog  target infra page&rsquo;" ></p>

<p>次回以降は、Datadog agentが収集している基本メトリックス以外の情報をDatadogに送信するための情報を解説します。</p>
]]></content>
  </entry>
  
</feed>
