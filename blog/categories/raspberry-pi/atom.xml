<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Raspberry Pi | Etizolam]]></title>
  <link href="http://jhotta.github.io/blog/categories/raspberry-pi/atom.xml" rel="self"/>
  <link href="http://jhotta.github.io/"/>
  <updated>2014-04-11T16:35:17+09:00</updated>
  <id>http://jhotta.github.io/</id>
  <author>
    <name><![CDATA[@jhotta]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Raspberry piにDatadog Agentをインストールしてみる]]></title>
    <link href="http://jhotta.github.io/blog/2014/04/11/datadog-on-raspberry-pi/"/>
    <updated>2014-04-11T15:44:00+09:00</updated>
    <id>http://jhotta.github.io/blog/2014/04/11/datadog-on-raspberry-pi</id>
    <content type="html"><![CDATA[<p>日頃Raspberry PiでRasbianを扱っているけど、これって所詮Linuxじゃんなんて思っふと考えるとDatadog Agent(以後DD-agent)が動けば、GPIOの入力を簡単に可視化できるし、その情報を基に色々遊べるかな〜と思ったりもした。</p>

<p>ということでDD-agentのインストール手順まとめておくことにする。インストールが終わった後(次回以降)は、python周りのライブライリーを使って、Raspberry Pi上のGPIO入出力データをDatadogに送ってみることにする。</p>

<h2>Datadog Agentのインストール</h2>

<p>まず最初に、DD-agentをインストールするためには、sysstatが必要です。確認の意味でもパッケージ管理コマンドを実行し、必要に応じてsysstatインストールしておく。</p>

<p><code>
sudo apt-get install sysstat
</code></p>

<p>次に、Datadogのアカウントを取得し、Datadogのダッシュボードにログインする。ダッシュボードが表示できたところで、Integrationsへカーソルを合わせるとプルダウンメニューが現れるので、Agentを選択する。</p>

<p><img class="center" src="/images/blog-images/datadog-integrations-source.png" width="800" height="800" title="&lsquo;datadog agent from source&rsquo; &lsquo;datadog agent from source&rsquo;" ></p>

<p>左側にあるメニューの一番下のFrom Sourceを選択すると次のような画面が表示されるでの、赤く囲った部分のコマンドコピーする。</p>

<p><img class="center" src="/images/blog-images/datadog-source-install.png" width="800" height="800" title="&lsquo;datadog agent from source&rsquo; &lsquo;datadog agent from source&rsquo;" ></p>

<p>このコマンドを、コンソールからroot権限で実行すると、次のような出力が表示されDD-agentが実行中の状態になる。</p>

<p>```
  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current</p>

<pre><code>                             Dload  Upload   Total   Spent    Left  Speed
</code></pre>

<p>100   184  100   184    0     0    309      0 &mdash;:&mdash;:&mdash; &mdash;:&mdash;:&mdash; &mdash;:&mdash;:&mdash;   859
100 17616  100 17616    0     0  19108      0 &mdash;:&mdash;:&mdash; &mdash;:&mdash;:&mdash; &mdash;:&mdash;:&mdash; 19108</p>

<p>Installing Datadog Agent 4.2.1</p>

<p>Creating Agent directory /root/.datadog-agent&hellip;.. Done
Creating log file /root/.datadog-agent/ddagent-install.log&hellip;..Done
Setting up virtual environment&hellip;..Done
Setting up setuptools and pip&hellip;..Done
Installing tornado 2.4.1 using pip&hellip;..Done
Downloading the latest version of the Agent from github (~2.5 MB)&hellip;..Done
Uncompressing the archive&hellip;..Done
Configuring datadog.conf file&hellip;&hellip;Done
Setting up launching scripts&hellip;..Done
Setting up supervisor&hellip;..Done
Consolidating logging&hellip;..Done
Cleaning up the installation directory&hellip;..Done
Starting the Agent&hellip;..Done</p>

<pre><code>Your Agent has started up for the first time. We're currently verifying
that data is being submitted. You should see your Agent show up in Datadog
shortly at:

    https://app.datadoghq.com/infrastructure
</code></pre>

<p>Waiting for metrics&hellip;&hellip;&hellip;&hellip;&hellip;&hellip;&hellip;&hellip;&hellip;&hellip;&hellip;</p>

<pre><code>Success! Your Agent is functioning properly, and will continue to run
in the foreground. To stop it, simply press CTRL-C. To start it back
up again in the foreground, run:

cd /root/.datadog-agent
sh bin/agent
</code></pre>

<p>```</p>

<p>ここで、</p>
]]></content>
  </entry>
  
</feed>
